// WE WILL MAKE EXPRESS SERVER
var express = require("express");
// SOCKET.IO REQUIRES WE SET IT UP WITH HTTP MODULE
var http = require('http');
// CREATE 'app' INSTANCE OF EXPRESS
var app = express();

// CREATE HTTP SERVER. INSTEAD OF FIRING A CALLBACK FUNCTION
// SIMPLY PASS THIS SERVER THE EXPRESS APPLICATION
// THIS WILL CREATE AN HTTP SERVER BASED ON THE EXPRESS APP
var server = http.createServer(app).listen(3000);

// WE NEED THIS SERVER TO WORK WITH SOCKET.IO
// CREATE VARIABLE FOR SOCKET.IO INSTANCE

// SOCKET.IO IS A FUNCTION, AND WHEN YOU INVOKE THE FUNCTION
// YOU NEED TO SEND IT THE SERVER YOU SHOULD LISTEN FOR
// INCOMING CONNECTIONS ON. HERE WE SEND IT THE HTTP SERVER
var io = require('socket.io')(server);

// ADD EXPRESS STATIC MIDDLEWARE
app.use(express.static("./public"));

// WE WILL BE USING THE LOCALHOST:3000 DOMAIN WITH SOCKET.IO
// WITH SOCKET.IO, WE DONT ACTUALLY CONNECT TO THE PURE
// WEBSOCKET, SOCKET.IO HANDLES ALL OF THE CONNECTIONS
// FOR US.

// LISTEN FOR INCOMING "CONNECTION". CLIENT SOCKET IS PASSED
// AS ARGUMENT TO CALLBACK FUNCTION 'socket'
io.on("connection", function (socket) {

    // WHEN "CHAT" EVENT IS EMITTED FROM THE CLIENT SOCKET
    // THIS CALLBACK WITH BE INVOKED TO HANDLE IT.
    // THE MESSAGE FROM THE CLIENT WILL BE PASSED TO CB FUNC
    socket.on("chat", function (message) {

        // NOW WE CAN BROADCAST THIS MESSAGE
        // TO ALL OF OUR CONNECTED CLIENT SOCKETS

        // "broadcast.emit()" WILL EMIT AN EVENT, LIKE
        // A "MESSAGE" EVENT, TO EVERY CONNECTED SOCKET
        socket.broadcast.emit("message", message);

    });


    // EMIT "MESSAGE" EVENT TO GIVEN ENDPOINT SOCKET.
    // VERY SIMILAR TO "WS" APPLICATION. THE KEY DIFFERENCE
    // IS WE ARE NOT SENDING ANYTHING, WE ARE ACTUALLY
    // EMITTING A SPECIAL TYPE OF EVENT. WE ARE EMITTING A
    // SOCKET EVENT HERE.
    socket.emit("message", "Welcome to Chat Cat");

    // WHENEVER A MESSAGE IS SENT, WE CAN LISTEN ON THE
    // CLIENT AS WELL

});

console.log("Starting Socket App - http://localhost:3000");
