// PLUCK WEBSOCKET SERVER OUT OF WS MODULE
var WebSocketServer = require('ws').Server;

// CREATE INSTANCE OF WEBSOCKET SERVER BY USING CONSTRUCTOR
// ACCEPTS ONE ARG: OPTIONS OBJ WITH PORT KEY/VALUE
var wss = new WebSocketServer(  { port: 3000 } );

// WE NOW HAVE A WEBSOCKET.SERVER THAT RUNS ON ITS OWN
// PROTOCOL, AND WE CAN CONNECT TO IT WITH 'ws://' AS
// OPPOSED TO "http://"

// SET UP A LISTENER FOR A CONNECTION.
// THIS WILL FIRE A CALLBACK FUNCTION WHEN A NEW SOCKET
// HAS CONNECTED. THE CB RECEIVES ONE ARG: THE INDIVIDUAL
// WEBSOCKET THAT CONNECTED 'ws'

// YOU CAN THINK OF A 'ws' WEBSOCKET AS A CONNECTED ENDPOINT
// THIS MEANS THAT WE HAVE 1 CLIENT CONNECTION AND EVERY
// CLIENT THAT CONNECTS IS GOING TO CAUSE THIS CALLBACK
// FUNCTION TO FIRE, THEN WE CAN EDIT THEIR INDIVIDUAL
// CONNECTION USING THIS VARIABLE.

wss.on("connection", function (ws) {

    // NOW WE WANT TO SEND MESSAGE BACK TO CLIENT 'ws'
    // ".send()" WILL SEND A "message" BACK TO THE CLIENT
    // AND WE WILL SEND IT AFTER THEY MADE CONNECTION
    ws.send("Welcome to the Chat Cat");


});

console.log("WSS Started on port 3000");
