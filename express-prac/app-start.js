var express = require('express');;

// CREATE APPLICATION INSTANCE USING 'express()' FUNCTION
// CREATES NEW INSTANCE OF EXPRESS APPLICATION
var app = express();


// NOW THAT WE HAVE AN EXPRESS INSTANCE WE CAN ADD"MIDDLEWARE"
// TO THIS APPLICATION. MIDDLEWARE IS LIKE CUSTOMIZED PLUGINS
// WE CAN ADD TO OUR EXPRESS APP TO ADD FUNCTIONALITY.
// THE REQ&RES OBJ WILL TRICKLE THROUGH THE MIDDLEWARE AS IS.

// THIS PIECE OF MIDDLEWARE IS A "CUSTOM" MIDDLEWARE THAT
// WE WILL USE TO LOG REQUEST INFORMATION TO THE PROCESS.
// IT WILL RECEIVE A CALLBACK FUNCTION AS ITS ARG. THE CB
// WILL RECEIVE THREE ARGUMENTS: THE REQ OBJ, RES OBJ, AND
// THE NEXT FUNCTION. AFTER WE LOG THE REQ INFO, WE MUST
// CALL THE 'next()' FUNCTION TO MOVE ON TO NEXT PIECE
// OF MIDDLEWARE IN THE PIPELINE.


app.use(function (req, res, next) {
    console.log(`${req.method} request for '${req.url}'`);
    next();
});


// THE PIECE OF MIDDLEWARE WE WANT TO USE IS A PIECE OF STATIC
// MIDDLEWARE THAT COMES WITH EXPRESS.'express.static()'TAKES
// ONE ARGUMENT AND THATS THE DIRECTORY WHICH WE WOULD LIKE TO
// SERVE STATIC FILES.

// NOW IF WE LOOK FOR ANY STATIC FILES UNDER THAT DIRECTORY
// THEY WILL BE SERVED.
app.use(express.static("./public"));


// TELL EXPRESS APP TO LISTEN TO PORT 3000
app.listen(3000);

console.log("Express app running on port 3000.");

// LAST THING WE WILL DO IS EXPORT OUR 'app' MODULE
// NOW WE CAN INCLUDE THIS APPLICATION INSTANCE IN OTHER FILES
// WE WILL BE IMPORTING THIS 'app' LATER ON WHEN WE TEST IT
module.exports = app;
